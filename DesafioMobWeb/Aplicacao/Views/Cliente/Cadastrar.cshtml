@model Modelo.Cadastros.Cliente

@{
    ViewBag.Title = "Cadastrar Clientes";
}

<h2>Cadastrar Clientes</h2>

@Html.ActionLink("Consultar Clientes", "Visualizar")

@using (Html.BeginForm())
{

    <!--### FORMULÁRIO CADASTRO DE CLIENTES ###-->
    <div class="form-horizontal">
        <h4>Cliente</h4>

        <!--Razão Social-->
        <div class="form-group">
            @Html.LabelFor(x => x.RazaoSocialCliente, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(x => x.RazaoSocialCliente, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <!--Fantasia-->
        <div class="form-group">
            @Html.LabelFor(x => x.FantasiaCliente, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(x => x.FantasiaCliente, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <!--CNPJ-->
        <div class="form-group">
            @Html.LabelFor(x => x.CnpjCliente, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <!--<input type="text" name="cnpj" id="cnpj" onkeyup="FormataCnpj(this,event)" onblur="if(!validarCNPJ(this.value)){alert('CNPJ Informado é inválido'); this.value='';}" maxlength="18" class="form-control input-md" ng-model="cadastro.cnpj" required>-->
                @Html.EditorFor(x => x.CnpjCliente, new
           {
               htmlAttributes = new
               {
                   @class = "form-control",
                   onKeyPress = "FormataCnpj(this,event)",
                   onblur = "if(!validarCNPJ(this.value)){alert('CNPJ Informado é inválido'); this.value='';}",
                   maxlength = "18"
               }
           })
            </div>
        </div>

        <!--Rua-->
        <div class="form-group">
            @Html.LabelFor(x => x.RuaCliente, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(x => x.RuaCliente, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <!--Número da Casa-->
        <div class="form-group">
            @Html.LabelFor(x => x.NumeroRuaCliente, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(x => x.NumeroRuaCliente, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <!--Complemento da Casa-->
        <div class="form-group">
            @Html.LabelFor(x => x.ComplementoCliente, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(x => x.ComplementoCliente, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <!--Bairro-->
        <div class="form-group">
            @Html.LabelFor(x => x.BairroCliente, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(x => x.BairroCliente, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <!--Município-->
        <div class="form-group">
            @Html.LabelFor(x => x.MunicipioCliente, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(x => x.MunicipioCliente, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <!--CEP-->
        <div class="form-group">
            @Html.LabelFor(x => x.CepCliente, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(x => x.CepCliente, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <!--Botão Cadastrar-->
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Cadastrar" class="btn btn-default" />
            </div>
        </div>
    </div>

    <div>
        @Html.ActionLink("Voltar", "Consultar")
    </div>
}
<script>
    function FormataCnpj(campo, teclapres) {
        var tecla = teclapres.keyCode;
        var vr = new String(campo.value);
        vr = vr.replace(".", "");
        vr = vr.replace("/", "");
        vr = vr.replace("-", "");
        tam = vr.length + 1;
        if (tecla != 14) {
            if (tam == 3)
                campo.value = vr.substr(0, 2) + '.';
            if (tam == 6)
                campo.value = vr.substr(0, 2) + '.' + vr.substr(2, 5) + '.';
            if (tam == 10)
                campo.value = vr.substr(0, 2) + '.' + vr.substr(2, 3) + '.' + vr.substr(6, 3) + '/';
            if (tam == 15)
                campo.value = vr.substr(0, 2) + '.' + vr.substr(2, 3) + '.' + vr.substr(6, 3) + '/' + vr.substr(9, 4) + '-' + vr.substr(13, 2);
        }
    }



    function validarCNPJ(cnpj) {

        cnpj = cnpj.replace(/[^\d]+/g, '');

        if (cnpj == '') return false;

        if (cnpj.length != 14)
            return false;

        // Elimina CNPJs invalidos conhecidos
        if (cnpj == "00000000000000" ||
            cnpj == "11111111111111" ||
            cnpj == "22222222222222" ||
            cnpj == "33333333333333" ||
            cnpj == "44444444444444" ||
            cnpj == "55555555555555" ||
            cnpj == "66666666666666" ||
            cnpj == "77777777777777" ||
            cnpj == "88888888888888" ||
            cnpj == "99999999999999")
            return false;

        // Valida DVs
        tamanho = cnpj.length - 2
        numeros = cnpj.substring(0, tamanho);
        digitos = cnpj.substring(tamanho);
        soma = 0;
        pos = tamanho - 7;
        for (i = tamanho; i >= 1; i--) {
            soma += numeros.charAt(tamanho - i) * pos--;
            if (pos < 2)
                pos = 9;
        }
        resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;
        if (resultado != digitos.charAt(0))
            return false;

        tamanho = tamanho + 1;
        numeros = cnpj.substring(0, tamanho);
        soma = 0;
        pos = tamanho - 7;
        for (i = tamanho; i >= 1; i--) {
            soma += numeros.charAt(tamanho - i) * pos--;
            if (pos < 2)
                pos = 9;
        }
        resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;
        if (resultado != digitos.charAt(1))
            return false;

        return true;

    }
</script>


